
events {
  use epoll;
  worker_connections 1024;
}

http {
  map_hash_max_size 128;
  map_hash_bucket_size 128;

  include /etc/nginx/apikeys.conf;
  log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                  'Status: $status - "$http_authorization" '
                  'Auth Token: $http_apikey - Client Name: $api_client_name '
                  '"$http_user_agent" "$http_referer"';
  access_log /var/log/nginx/access.log custom;

  server {
    listen 5050;

    location / {
      auth_request /_validate_apikey;
      proxy_pass http://ollama:11434/;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header Content-Type 'text/event-stream';

      proxy_cache_bypass $http_upgrade;

      # Disable buffering for the streaming responses
      proxy_buffering off;
    }

    location = /_validate_apikey {
      internal;

      # Extract the Bearer token from the Authorization header
      if ($http_authorization ~* "Bearer (.+)") {
          set $http_apikey $1;
      }

      # Extract the apikey from the apikey header
      if ($http_apikey = "") {
        return 401; # Unauthorized (no apikey)
      }

      access_log /var/log/nginx/auth_access.log custom;

      # Validate the extracted token against the mapped API keys
      if ($api_client_name = "") {
          return 401; # Unauthorized (invalid apikey)
      }

      return 204; # OK (no content)
    }
  }
}
